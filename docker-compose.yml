version: "3.9"
services:

  db:
    image: postgres
    container_name: postgresql
    env_file:
      - envs/development/db/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis
    command: redis-server --save 60 1 --loglevel warning
    restart: always
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: dockerfiles/development/django/Dockerfile
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
      - "5678:5678"
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - envs/development/backend/.env
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - db

  worker:
    build:
      context: .
      dockerfile: dockerfiles/development/django/Dockerfile
    container_name: worker
    command: celery -A core worker --loglevel=info
    env_file:
      - envs/development/backend/.env
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      - db

  schedule_worker:
    build:
      context: .
      dockerfile: dockerfiles/development/django/Dockerfile
    container_name: beat
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - envs/development/backend/.env
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      - db

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev

volumes:
  postgres_data:
  smtp4dev-data:
